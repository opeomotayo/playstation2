apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: sonarqube
      meta.helm.sh/release-namespace: sonarqube
    labels:
      app.kubernetes.io/instance: sonarqube
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-10.4.8
    name: sonarqube-postgresql
    namespace: sonarqube
  spec:
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    selector:
      app.kubernetes.io/instance: sonarqube
      app.kubernetes.io/name: postgresql
      role: primary
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: sonarqube
      meta.helm.sh/release-namespace: sonarqube
    labels:
      app.kubernetes.io/instance: sonarqube
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-10.4.8
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    name: sonarqube-postgresql-headless
    namespace: sonarqube
  spec:
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/instance: sonarqube
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: sonarqube
      meta.helm.sh/release-namespace: sonarqube
    labels:
      app: sonarqube
      app.kubernetes.io/managed-by: Helm
      chart: sonarqube-1.1.6_121
      heritage: Helm
      release: sonarqube
    name: sonarqube-sonarqube
    namespace: sonarqube
  spec:
    ports:
    - name: http
      port: 9000
      targetPort: http
      nodePort: 32004
      protocol: TCP
    selector:
      app: sonarqube
      release: sonarqube
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
kind: List

